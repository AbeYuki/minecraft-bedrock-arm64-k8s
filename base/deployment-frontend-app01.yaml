apiVersion: v1
kind: Service
metadata:
  name: frontend-app01
  labels:
    app.kubernetes.io: bedrock
spec:
  type: NodePort
  ports:
    - name: udp
      protocol: UDP
      nodePort: 19132
      port: 19132
      targetPort: 19132
  selector:
    app.kubernetes.io/name: bedrock
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-app01
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app01
  labels:
    app.kubernetes.io/name: bedrock
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bedrock
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bedrock
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: In
                values:
                - "true"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - bedrock
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: docker-registry
      containers:
      - name: frontend-app01
        image: frontend-app01
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "0.5"
            memory: 500Mi
          limits:
            cpu: "2"
            memory: 5Gi
        env:
        - name: TZ
          value: Asia/Tokyo
        ports:
        - name: bedrock
          containerPort: 19132
          protocol: UDP
        volumeMounts:
        - name: worlds
          mountPath: /bedrock-server/worlds/
        - name: configmap-config01
          mountPath: /tmp
      volumes:
      - name: worlds
        persistentVolumeClaim:
          claimName: frontend-app01
#      - name: configmap-config01
#        projected:
#          sources:
#          - configMap:
#              name: configmap-allowlist-config01
#          - configMap:
#              name: configmap-permissins-config01
#          - configMap:
#              name: configmap-server-properties-config01
